package com.example.demo.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.BeanIds;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;
import com.example.demo.filter.JwtFilter;
import com.example.demo.service.AuthenticationService;



@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {
	
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		http.csrf().disable().authorizeRequests().and().antMatcher("/**").authorizeRequests().anyRequest()
				.authenticated().and().addFilterAfter(new JwtFilter(), BasicAuthenticationFilter.class)
				.authorizeRequests();
	}


	// For ignoring security of some api endpoints
	@Override
	public void configure(WebSecurity webSecurity) {
		System.out.println("in web security");
		webSecurity.ignoring().antMatchers("/","/assets/**", "/*.js", "/*.css","/*.eot", "/*.svg" ,"/*.woff2" ,"/*.ttf" ,"/*.woff" ,"/*.jpg",
				"/*.html" ,"/*.scss" ,"/*.png" ,"/*.ico","/*.js" , "/*.bootstrap.min.css"
				,"foodie-web-app/**","/user/auth/login","/user/auth/success","/user/auth/failure","/user/auth/invalid");
		
		
	}
	

}